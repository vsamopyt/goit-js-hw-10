{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector(\".form\");\nconst inputDealy = form.elements.delay;\nconst radiobutton = form.elements.state;\nconst btnSubmit = document.querySelector(\".form button\")\n\n// console.log(inputDealy.type);\n// radiobutton.forEach(element => {\n//     element.onclick = () => {\n//         if(element.checked) {\n//             // console.log(element.value);\n//             promiseState = element.value;\n//             console.log(promiseState);\n\n//         }\n//     }\n    \n// });\n\n\nfunction errorMessage (data) {\n    iziToast.error({\n        title: 'Error:',\n        message: data,\n        position: 'topRight',\n        messageColor: 'white',\n        backgroundColor: 'rgb(238, 4, 50)',\n        theme: 'dark', // dark\n        color: 'red', // blue, red, green, yellow\n        width: \"500\",\n        messageSize: \"16\",\n        titleSize:\"16\",\n        progressBar: false,\n    });\n}\n// }\n\nfunction succesMessage (data) {\n    iziToast.success({\n        title: 'OK',\n        message: data,\n        position: 'topRight',\n        messageColor: 'white',\n        backgroundColor: \"#59a10d\",\n        theme: 'dark', // dark\n        messageSize: \"16\",\n        titleSize:\"16\",\n        progressBar: false,\n    });\n}\n \nfunction warningMessage (data) {\n    iziToast.warning({\n        title: 'Caution',\n        message: data,\n        position: 'topRight',\n        messageColor: 'white',\n        backgroundColor: \" #ffa000\",\n        theme: 'dark', // dark\n        messageSize: \"16\",\n        titleSize:\"16\",\n        progressBar: false,\n    });\n}\n\n\nfunction makePromises (options) {\n    const {delay, state} = options;\n    console.log(state);\n    const newPromise = new Promise ((resolve, reject) => {\n        setTimeout (()=>{\n            if(state === \"fulfilled\") {\n                console.log(state );\n                resolve (`Fulfilled promise in ${delay}ms`)\n            }\n            else {\n                console.log(state );\n                reject(`Rejected promise in ${delay}ms`)\n            }\n        }, delay)\n    })\n    return newPromise \n}\n\n\nbtnSubmit.addEventListener(\"click\", (event) => {\n    // event.preventDefault();\n    const promiseOptions = {}\n    if(inputDealy.value !== \"\" ) {\n        // console.log(inputDealy.value.trim());\n        promiseOptions.delay = Number(inputDealy.value.trim())\n    }\n   \n    const isChecked = Array.from(radiobutton).some(element => element.checked );\n    if(isChecked) {\n        radiobutton.forEach(element => {\n            if (element.checked) {\n                promiseOptions.state = element.value;\n            }\n        })\n    }\n\n    const promiseOptionsLength= Object.values(promiseOptions).length\n\n    if (promiseOptionsLength !== 2) {\n\n       warningMessage (\"fill all fields\") \n\n        // iziToast.error({\n        //     title: 'Error:',\n        //     message: \"fill all the fields\",\n        //     position: 'topRight',\n        //     messageColor: 'white',\n        //     backgroundColor: 'rgb(238, 4, 50)',\n        //     theme: 'dark', // dark\n        //     color: 'red', // blue, red, green, yellow\n        //     width: \"500\",\n        //     messageSize: \"16\",\n        //     titleSize:\"16\",\n        //     progressBar: false,\n        // });\n    }\n    else {\n        console.log(promiseOptions);\n\n    makePromises (promiseOptions)\n        .then (data =>{\n\n           succesMessage (data)\n            // iziToast.success({\n            //     title: 'OK',\n            //     message: data,\n            //     position: 'topRight'\n            // });\n        })\n        .catch (data => {\n\n            errorMessage(data)\n            // iziToast.warning({\n            //     title: 'Caution',\n            //     message: data,\n            //     position: 'topRight'\n            // });\n        })\n    }\n\n    // promiseOptions = {};\n    radiobutton.forEach(element => {\n        element.checked = false \n    })\n    inputDealy.value =\"\";\n\n})"],"names":["form","inputDealy","radiobutton","btnSubmit","errorMessage","data","iziToast","succesMessage","warningMessage","makePromises","options","delay","state","resolve","reject","event","promiseOptions","element"],"mappings":"wIAKA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAaD,EAAK,SAAS,MAC3BE,EAAcF,EAAK,SAAS,MAC5BG,EAAY,SAAS,cAAc,cAAc,EAgBvD,SAASC,EAAcC,EAAM,CACzBC,EAAS,MAAM,CACX,MAAO,SACP,QAASD,EACT,SAAU,WACV,aAAc,QACd,gBAAiB,kBACjB,MAAO,OACP,MAAO,MACP,MAAO,MACP,YAAa,KACb,UAAU,KACV,YAAa,EACrB,CAAK,CACL,CAGA,SAASE,EAAeF,EAAM,CAC1BC,EAAS,QAAQ,CACb,MAAO,KACP,QAASD,EACT,SAAU,WACV,aAAc,QACd,gBAAiB,UACjB,MAAO,OACP,YAAa,KACb,UAAU,KACV,YAAa,EACrB,CAAK,CACL,CAEA,SAASG,EAAgBH,EAAM,CAC3BC,EAAS,QAAQ,CACb,MAAO,UACP,QAASD,EACT,SAAU,WACV,aAAc,QACd,gBAAiB,WACjB,MAAO,OACP,YAAa,KACb,UAAU,KACV,YAAa,EACrB,CAAK,CACL,CAGA,SAASI,EAAcC,EAAS,CAC5B,KAAM,CAAC,MAAAC,EAAO,MAAAC,CAAK,EAAIF,EACvB,eAAQ,IAAIE,CAAK,EACE,IAAI,QAAS,CAACC,EAASC,IAAW,CACjD,WAAY,IAAI,CACTF,IAAU,aACT,QAAQ,IAAIA,GACZC,EAAS,wBAAwBF,CAAK,IAAI,IAG1C,QAAQ,IAAIC,GACZE,EAAO,uBAAuBH,CAAK,IAAI,EAE9C,EAAEA,CAAK,CAChB,CAAK,CAEL,CAGAR,EAAU,iBAAiB,QAAUY,GAAU,CAE3C,MAAMC,EAAiB,CAAE,EACtBf,EAAW,QAAU,KAEpBe,EAAe,MAAQ,OAAOf,EAAW,MAAM,KAAI,CAAE,GAGvC,MAAM,KAAKC,CAAW,EAAE,KAAKe,GAAWA,EAAQ,UAE9Df,EAAY,QAAQe,GAAW,CACvBA,EAAQ,UACRD,EAAe,MAAQC,EAAQ,MAE/C,CAAS,EAGuB,OAAO,OAAOD,CAAc,EAAE,SAE7B,EAE1BR,EAAgB,iBAAiB,GAiBhC,QAAQ,IAAIQ,CAAc,EAE9BP,EAAcO,CAAc,EACvB,KAAMX,GAAO,CAEXE,EAAeF,CAAI,CAM9B,CAAS,EACA,MAAOA,GAAQ,CAEZD,EAAaC,CAAI,CAM7B,CAAS,GAILH,EAAY,QAAQe,GAAW,CAC3BA,EAAQ,QAAU,EAC1B,CAAK,EACDhB,EAAW,MAAO,EAEtB,CAAC"}