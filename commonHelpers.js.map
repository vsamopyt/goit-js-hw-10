{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst btnStart = document.querySelector(\"button\");\n\nconst timeValue =  document.querySelectorAll(\".value\");\nconst myInput = document.querySelector(\"#datetime-picker\");\n\nbtnStart.disabled = true;\n\n\nfunction addLeadingZero(value) {\n  value=value.toString()\n  return value.padStart(2, '0')\n}\n\nconsole.log(addLeadingZero(10));\nconsole.log(addLeadingZero(1));\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  \n//   console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n//   console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n//   console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nlet userSelectedDate = 0;\n\n\nconst options = {\n    enableTime: true,\n    altInputClass: \"calendar-block\",\n    // dateFormat: \"Y-m-d H:i\",\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    \n    onClose(selectedDates) {\n      console.log(selectedDates[0]);\n    },\n  };\n  \nconst fp = flatpickr(myInput, {...options});  // flatpickr\n\n\nfp.config.onOpen.push(function()  {\n  btnStart.style.backgroundColor=\"#4e75ff\";\n  btnStart.style.color=\"#fff\";\n  myInput.style.border = \"none\";\n  myInput.style.outline = \"1px solid blue\";\n})\n\n\n fp.config.onClose.push(function() { \n  \n\n  //  btnStart.style.backgroundColor=\"#cfcfcf\";\n  //  btnStart.style.color=\"#989898\";\n    // fp.selectedDates.push(myInput.value)\n    const currentUnixTime = options.defaultDate.getTime()\n    // console.log(options.defaultDate, options.defaultDate.getTime());\n    \n   \n   \n    const nextUnixTime = fp.selectedDates[0].getTime()\n    // console.log(nextUnixTime,fp.selectedDates[0]);\n\n    const gapTime = nextUnixTime - currentUnixTime;\n\n    if (gapTime > 0) {\n        userSelectedDate = gapTime;\n\n        btnStart.disabled = false;\n        // console.log(userSelectedDate);\n    }\n    else {\n\n      iziToast.error({\n        title: 'Error',\n        message: \"Please choose a date in the future\",\n        position:\t'topRight',\n        backgroundColor: \"red\",\n        messageColor: \"#fff\",\n        titleColor: \"#fff\",\n        iconColor: \"#fff\",\n        theme: 'light',\n    });\n    \n        // window.alert(\"Please choose a date in the future\")\n         btnStart.disabled = true;\n         btnStart.style.backgroundColor=\"#cfcfcf\";\n    btnStart.style.color=\"#989898\";\n    myInput.style.border = \"none\";\n    myInput.style.outline = \"1px solid black\";\n\n    }\n\n    \n    // const intervalId = setInterval(() => {\n    //     // console.log(userSelectedDate);\n    //     console.log(convertMs( userSelectedDate));\n    //     const objcTime = convertMs( userSelectedDate);\n    //     timeValue[0].textContent = objcTime.days;\n    //     timeValue[1].textContent = objcTime.hours\n    //     timeValue[2].textContent = objcTime.minutes\n    //     timeValue[3].textContent = objcTime.seconds\n    //     userSelectedDate = userSelectedDate-1000;\n\n    //     // console.log(userSelectedDate);\n    //   }, 1000);\n\n    //   intervalId(userSelectedDate)\n//    console.log(convertMs(userSelectedDate));\n\n//     config.selectedDates.push(myInput.value)\n// userSelectedDate = nextUnixTime - currentUnixTime \n// console.log(userSelectedDate);\n// console.log( fp.selectedDates[0].getTime());\n// console.log(convertMs(userSelectedDate));  \n } );\n\n\n\n\n \n\n\n\n//  const intervalId = setInterval((userSelectedDate) => {\n//     console.log(convertMs( userSelectedDate));\n//     userSelectedDate-=1000\n//   }, 1000);\n\n\n \nbtnStart.addEventListener(\"click\", ()=>{\n   btnStart.style.backgroundColor=\"#cfcfcf\";\n    btnStart.style.color=\"#989898\";\n    myInput.style.border = \"none\";\n    myInput.style.outline = \"1px solid black\";\n    btnStart.disabled = true;\n    myInput.disabled  = true; \n\n   const intervaLid =  setInterval(() => {\n        console.log(convertMs( userSelectedDate));\n        const objcTime = convertMs( userSelectedDate);\n        timeValue[0].textContent = addLeadingZero(objcTime.days)\n        timeValue[1].textContent = addLeadingZero(objcTime.hours);\n        timeValue[2].textContent = addLeadingZero(objcTime.minutes);\n        timeValue[3].textContent = addLeadingZero(objcTime.seconds);\n        // timeValue[3].textContent = objcTime.seconds;\n        // userSelectedDate = userSelectedDate-1000;\n        userSelectedDate = userSelectedDate-1000\n        if (userSelectedDate <=0) {\n            clearInterval(intervaLid)\n            btnStart.disabled = true;\n            myInput.disabled  = false; \n        }\n\n\n      }, 1000);\n\n})"],"names":["btnStart","timeValue","myInput","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","userSelectedDate","options","selectedDates","fp","flatpickr","currentUnixTime","gapTime","iziToast","intervaLid","objcTime"],"mappings":"+IAUA,MAAMA,EAAW,SAAS,cAAc,QAAQ,EAE1CC,EAAa,SAAS,iBAAiB,QAAQ,EAC/CC,EAAU,SAAS,cAAc,kBAAkB,EAEzDF,EAAS,SAAW,GAGpB,SAASG,EAAeC,EAAO,CAC7B,OAAAA,EAAMA,EAAM,SAAU,EACfA,EAAM,SAAS,EAAG,GAAG,CAC9B,CAEA,QAAQ,IAAID,EAAe,EAAE,CAAC,EAC9B,QAAQ,IAAIA,EAAe,CAAC,CAAC,EAE7B,SAASE,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAMH,IAAIC,EAAmB,EAGvB,MAAMC,EAAU,CACZ,WAAY,GACZ,cAAe,iBAEf,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC7B,CACL,EAEMC,EAAKC,EAAUb,EAAS,CAAC,GAAGU,CAAO,CAAC,EAG1CE,EAAG,OAAO,OAAO,KAAK,UAAY,CAChCd,EAAS,MAAM,gBAAgB,UAC/BA,EAAS,MAAM,MAAM,OACrBE,EAAQ,MAAM,OAAS,OACvBA,EAAQ,MAAM,QAAU,gBAC1B,CAAC,EAGAY,EAAG,OAAO,QAAQ,KAAK,UAAW,CAM/B,MAAME,EAAkBJ,EAAQ,YAAY,QAAS,EAQ/CK,EAHeH,EAAG,cAAc,CAAC,EAAE,QAAS,EAGnBE,EAE3BC,EAAU,GACVN,EAAmBM,EAEnBjB,EAAS,SAAW,KAKtBkB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WACV,gBAAiB,MACjB,aAAc,OACd,WAAY,OACZ,UAAW,OACX,MAAO,OACf,CAAK,EAGIlB,EAAS,SAAW,GACpBA,EAAS,MAAM,gBAAgB,UACpCA,EAAS,MAAM,MAAM,UACrBE,EAAQ,MAAM,OAAS,OACvBA,EAAQ,MAAM,QAAU,kBA0B5B,GAgBAF,EAAS,iBAAiB,QAAS,IAAI,CACpCA,EAAS,MAAM,gBAAgB,UAC9BA,EAAS,MAAM,MAAM,UACrBE,EAAQ,MAAM,OAAS,OACvBA,EAAQ,MAAM,QAAU,kBACxBF,EAAS,SAAW,GACpBE,EAAQ,SAAY,GAErB,MAAMiB,EAAc,YAAY,IAAM,CACjC,QAAQ,IAAId,EAAWM,CAAgB,CAAC,EACxC,MAAMS,EAAWf,EAAWM,CAAgB,EAC5CV,EAAU,CAAC,EAAE,YAAcE,EAAeiB,EAAS,IAAI,EACvDnB,EAAU,CAAC,EAAE,YAAcE,EAAeiB,EAAS,KAAK,EACxDnB,EAAU,CAAC,EAAE,YAAcE,EAAeiB,EAAS,OAAO,EAC1DnB,EAAU,CAAC,EAAE,YAAcE,EAAeiB,EAAS,OAAO,EAG1DT,EAAmBA,EAAiB,IAChCA,GAAmB,IACnB,cAAcQ,CAAU,EACxBnB,EAAS,SAAW,GACpBE,EAAQ,SAAY,GAIzB,EAAE,GAAI,CAEb,CAAC"}